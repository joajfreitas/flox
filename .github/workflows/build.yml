name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # before the plugin, as it uses the current rustc version as its cache key
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: 1.55.0
    - uses: Swatinem/rust-cache@v1
    - name: Build
      run: cargo rustc --verbose -- -D warnings

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: Swatinem/rust-cache@v1
    - name: Unit tests
      run: cargo test

  spec-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: Swatinem/rust-cache@v1
    - name: Unit tests
      run: cargo run --example test tests/specs/base.json

  format-check:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Install latest nightly
          uses: actions-rs/toolchain@v1
          with:
              toolchain: stable
              override: true
              components: rustfmt, clippy

        - name: Run rustfmt
          run: rustfmt --check src/* examples/*



  clippy-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          args: --all-features

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: Swatinem/rust-cache@v1
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          args: --all-features
